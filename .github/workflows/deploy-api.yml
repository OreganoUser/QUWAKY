name: Build & Deploy Motoscope API (GHCR)

on:
  push:
    branches: [ "main" ]
    paths:
      - "Motoscope/motoscope-api/**"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # build & push from the runner; read is implied

    env:
      IMAGE_BASENAME: motoscope-api

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute lowercase owner
        id: names
        run: |
          owner_lc="$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')"
          echo "owner_lc=$owner_lc" >> $GITHUB_OUTPUT

      - name: Log in to GHCR (runner)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: ./Motoscope/motoscope-api
          push: true
          tags: |
            ghcr.io/${{ steps.names.outputs.owner_lc }}/${{ env.IMAGE_BASENAME }}:latest
            ghcr.io/${{ steps.names.outputs.owner_lc }}/${{ env.IMAGE_BASENAME }}:${{ github.sha }}

      - name: SSH & update container on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -euo pipefail
            owner_lc=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
            image="ghcr.io/${owner_lc}/${{ env.IMAGE_BASENAME }}:latest"

            # Login on the SERVER using a PAT with read:packages
            docker login ghcr.io -u "${owner_lc}" -p "${{ secrets.GHCR_PAT }}"

            docker pull "$image"

            cd /srv/motoscope-api/Motoscope/motoscope-api

            # Make sure your compose file uses the SAME lowercase image.
            # Then redeploy and clean orphans.
            docker compose up -d --remove-orphans

            # Optional cleanup
            docker image prune -f

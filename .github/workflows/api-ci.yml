name: api-ci

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: ping
        run: echo "workflow syntax OK"

      - name: checkout
        uses: actions/checkout@v4

      - name: compute-owner
        id: names
        run: |
          owner_lc="$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')"
          echo "owner_lc=$owner_lc" >> "$GITHUB_OUTPUT"

      # login with PAT
      - name: ghcr-login-with-pat
        run: |
          echo "${{ secrets.GHCR_PAT_API }}" | docker login ghcr.io -u "${{ secrets.GHCR_USER }}" --password-stdin

      # build & push
      - name: build-push-image
        uses: docker/build-push-action@v6
        with:
          context: ./Motoscope/motoscope-api
          file: ./Motoscope/motoscope-api/Dockerfile
          push: true
          provenance: false
          tags: |
            ghcr.io/${{ secrets.GHCR_USER }}/motoscope-api:latest
            ghcr.io/${{ secrets.GHCR_USER }}/motoscope-api:${{ github.sha }}
          outputs: type=registry


      - name: ssh-ensure-stack
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST_API }}
          username: ${{ secrets.SSH_USER_API }}
          key: ${{ secrets.SSH_KEY_API }}
          port: ${{ secrets.SSH_PORT_API }}
          script: |
            set -euo pipefail
            echo "${{ secrets.GHCR_PAT_API }}" | docker login ghcr.io -u "${{ secrets.GHCR_USER }}" --password-stdin || true

            image="ghcr.io/${{ secrets.GHCR_USER }}/motoscope-api:latest"
            docker pull "$image"

            cd /srv/motoscope-api/Motoscope/motoscope-api

            if docker compose version >/dev/null 2>&1; then
              COMPOSE="docker compose"
            else
              COMPOSE="docker-compose"
            fi
            echo "Using: $COMPOSE"

            $COMPOSE -p motoscope-api down || true
            docker rm -f motoscope-api motoscope-api_db_1 2>/dev/null || true

            $COMPOSE -p motoscope-api up -d --remove-orphans --force-recreate

            # show health
            docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"



      - name: ssh-prepare-dirs
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST_API }}
          username: ${{ secrets.SSH_USER_API }}
          key: ${{ secrets.SSH_KEY_API }}
          port: ${{ secrets.SSH_PORT_API }}
          script: |
            set -euo pipefail
            mkdir -p /srv/motoscope-api/Motoscope/motoscope-api/{migrations,seeds,ops}

      # upload schema.sql to project root
      - name: "SCP - schema.sql"
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST_API }}
          username: ${{ secrets.SSH_USER_API }}
          key: ${{ secrets.SSH_KEY_API }}
          port: ${{ secrets.SSH_PORT_API }}
          source: "Motoscope/motoscope-api/schema.sql"
          target: "/srv/motoscope-api/Motoscope/motoscope-api/"

      # upload migrations into the top-level migrations dir
      - name: "SCP - migrations"
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST_API }}
          username: ${{ secrets.SSH_USER_API }}
          key: ${{ secrets.SSH_KEY_API }}
          port: ${{ secrets.SSH_PORT_API }}
          source: "Motoscope/motoscope-api/migrations/*"
          target: "/srv/motoscope-api/Motoscope/motoscope-api/migrations"

      # upload seeds into the top-level seeds dir
      - name: "SCP - seeds"
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST_API }}
          username: ${{ secrets.SSH_USER_API }}
          key: ${{ secrets.SSH_KEY_API }}
          port: ${{ secrets.SSH_PORT_API }}
          source: "Motoscope/motoscope-api/seeds/*"
          target: "/srv/motoscope-api/Motoscope/motoscope-api/seeds"


      - name: ssh-run-migrations
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST_API }}
          username: ${{ secrets.SSH_USER_API }}
          key: ${{ secrets.SSH_KEY_API }}
          port: ${{ secrets.SSH_PORT_API }}
          script: |
            set -euo pipefail
            cd /srv/motoscope-api/Motoscope/motoscope-api

            # prefer docker compose v2
            if docker compose version >/dev/null 2>&1; then
              COMPOSE="docker compose"
            else
              COMPOSE="docker-compose"
            fi

            # wait for db to be healthy
            echo "Waiting for db to be healthy..."
            for i in $(seq 1 40); do
              if $COMPOSE ps --format json | jq -e '.[] | select(.Name=="motoscope-api_db_1") | .Health=="healthy"' >/dev/null 2>&1; then
                echo "DB is healthy"; break
              fi
              sleep 2
            done

            # run migrator
            if [ ! -x ops/migrate.sh ]; then
              echo "migrate.sh missing or not executable"; exit 1
            fi
            ./ops/migrate.sh



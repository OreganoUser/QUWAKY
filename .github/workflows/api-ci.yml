name: Build & Deploy Motoscope API (GHCR)

on:
  push:
    branches: [ "main" ]
    # uncomment to limit triggers to API changes only
    # paths:
    #   - "Motoscope/motoscope-api/**"
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: compute-owner-lc (debug only)
        id: names
        run: |
          owner_lc="$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')"
          echo "owner_lc=$owner_lc" >> "$GITHUB_OUTPUT"
          echo "owner_lc=$owner_lc"

      # ---- Build & push image to GHCR using PAT namespace ----
      - name: ghcr-login-with-pat
        run: |
          echo "${{ secrets.GHCR_PAT_API }}" | docker login ghcr.io -u "${{ secrets.GHCR_USER }}" --password-stdin

      - name: build-push-image
        uses: docker/build-push-action@v6
        with:
          context: ./Motoscope/motoscope-api
          file: ./Motoscope/motoscope-api/Dockerfile
          push: true
          provenance: false
          outputs: type=registry
          tags: |
            ghcr.io/${{ secrets.GHCR_USER }}/motoscope-api:latest
            ghcr.io/${{ secrets.GHCR_USER }}/motoscope-api:${{ github.sha }}

      # ---- Ensure stack is up on server (compose v2, force recreate, no stale containers) ----
      - name: ssh-ensure-stack
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST_API }}
          username: ${{ secrets.SSH_USER_API }}   # deploy
          key: ${{ secrets.SSH_KEY_API }}
          port: ${{ secrets.SSH_PORT_API }}
          script: |
            set -euo pipefail

            echo "${{ secrets.GHCR_PAT_API }}" | docker login ghcr.io -u "${{ secrets.GHCR_USER }}" --password-stdin || true
            image="ghcr.io/${{ secrets.GHCR_USER }}/motoscope-api:latest"
            docker pull "$image"

            cd /srv/motoscope-api/Motoscope/motoscope-api

            if docker compose version >/dev/null 2>&1; then
              COMPOSE="docker compose"
            else
              COMPOSE="docker-compose"
            fi
            echo "Using: $COMPOSE"

            # stop old stack & remove stale containers that trigger ContainerConfig bug
            $COMPOSE -p motoscope-api down || true
            docker rm -f motoscope-api motoscope-api_db_1 2>/dev/null || true

            # ensure host data dir perms for postgres
            sudo mkdir -p /srv/postgres-data
            sudo chown -R 999:999 /srv/postgres-data

            # bring up fresh
            $COMPOSE -p motoscope-api up -d --remove-orphans --force-recreate

            # show current containers
            docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

      - name: debug-tree
        run: |
          pwd
          ls -la
          echo "---- Motoscope/motoscope-api ----"
          ls -la Motoscope/motoscope-api || true
          echo "---- migrations ----"
          ls -la Motoscope/motoscope-api/migrations || true
          echo "---- seeds ----"
          ls -la Motoscope/motoscope-api/seeds || true
          echo "---- ops ----"
          ls -la Motoscope/motoscope-api/ops || true


      # ---- Prepare target dirs (guarantee flat structure) ----
      - name: ssh-prepare-dirs
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST_API }}
          username: ${{ secrets.SSH_USER_API }}
          key: ${{ secrets.SSH_KEY_API }}
          port: ${{ secrets.SSH_PORT_API }}
          script: |
            set -euo pipefail
            mkdir -p /srv/motoscope-api/Motoscope/motoscope-api/{migrations,seeds,ops}

      # schema (single file) — strip 2: Motoscope + motoscope-api
      - name: scp-schema
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST_API }}
          username: ${{ secrets.SSH_USER_API }}
          key: ${{ secrets.SSH_KEY_API }}
          port: ${{ secrets.SSH_PORT_API }}
          source: "Motoscope/motoscope-api/schema.sql"
          target: "/srv/motoscope-api/Motoscope/motoscope-api/"
          strip_components: 2
          overwrite: true

      # migrations dir — strip 3: Motoscope + motoscope-api + migrations
      - name: scp-migrations
        if: ${{ hashFiles('Motoscope/motoscope-api/migrations/*.sql') != '' }}
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST_API }}
          username: ${{ secrets.SSH_USER_API }}
          key: ${{ secrets.SSH_KEY_API }}
          port: ${{ secrets.SSH_PORT_API }}
          source: "Motoscope/motoscope-api/migrations"
          target: "/srv/motoscope-api/Motoscope/motoscope-api/migrations"
          strip_components: 3
          overwrite: true

      # seeds dir — strip 3: Motoscope + motoscope-api + seeds
      - name: scp-seeds
        if: ${{ hashFiles('Motoscope/motoscope-api/seeds/*.sql') != '' }}
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST_API }}
          username: ${{ secrets.SSH_USER_API }}
          key: ${{ secrets.SSH_KEY_API }}
          port: ${{ secrets.SSH_PORT_API }}
          source: "Motoscope/motoscope-api/seeds"
          target: "/srv/motoscope-api/Motoscope/motoscope-api/seeds"
          strip_components: 3
          overwrite: true


      # make sure it's executable + wait for DB health
      - name: ssh-prepare-migrate
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST_API }}
          username: ${{ secrets.SSH_USER_API }}
          key: ${{ secrets.SSH_KEY_API }}
          port: ${{ secrets.SSH_PORT_API }}
          script: |
            set -euo pipefail
            cd /srv/motoscope-api/Motoscope/motoscope-api
            chmod +x ops/migrate.sh

            # prefer compose v2
            if docker compose version >/dev/null 2>&1; then
              COMPOSE="docker compose"
            else
              COMPOSE="docker-compose"
            fi

            echo "Waiting for PostgreSQL to accept connections..."
            for i in $(seq 1 60); do
              if docker exec motoscope-api_db_1 pg_isready -U "${DB_USER:-motoscope_api}" -d "${DB_NAME:-motoscope}" >/dev/null 2>&1; then
                echo "DB is ready"; break
              fi
              sleep 2
            done

      # run it
      - name: ssh-run-migrations
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST_API }}
          username: ${{ secrets.SSH_USER_API }}
          key: ${{ secrets.SSH_KEY_API }}
          port: ${{ secrets.SSH_PORT_API }}
          script: |
            set -euo pipefail
            cd /srv/motoscope-api/Motoscope/motoscope-api
            ./ops/migrate.sh
